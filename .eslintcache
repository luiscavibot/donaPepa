[{"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\index.js":"1","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\App.jsx":"2","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\firebase.js":"3","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\Login.jsx":"4","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\PanelControl.jsx":"5","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ReportesVentas.jsx":"6","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ContenidosReportes.jsx":"7","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\NuevaVenta.jsx":"8"},{"size":223,"mtime":1608597240098,"results":"9","hashOfConfig":"10"},{"size":1399,"mtime":1610238526337,"results":"11","hashOfConfig":"10"},{"size":520,"mtime":1608598381149,"results":"12","hashOfConfig":"10"},{"size":4860,"mtime":1610372849979,"results":"13","hashOfConfig":"10"},{"size":9934,"mtime":1611283249219,"results":"14","hashOfConfig":"10"},{"size":1896,"mtime":1610332615226,"results":"15","hashOfConfig":"10"},{"size":23942,"mtime":1611074495370,"results":"16","hashOfConfig":"10"},{"size":27746,"mtime":1611283249202,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"u1u9io",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\index.js",[],["36","37"],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\App.jsx",[],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\firebase.js",[],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\Login.jsx",[],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\PanelControl.jsx",["38"],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ReportesVentas.jsx",[],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ContenidosReportes.jsx",["39"],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\NuevaVenta.jsx",["40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker, {registerLocale} from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { set } from 'date-fns/esm'\r\n\r\nconst NuevaVenta = () => {\r\n\r\n    const [lista, setLista] = useState([])\r\n    // const [numLista, setNumLista] = useState(0)\r\n    // const [cod, setCod] = useState(0)\r\n    const [descripcion, setDescripcion] = useState('')\r\n    // const [unidades, setUnidades] = useState('')\r\n    // const [cantidad, setCantidad] = useState(0)\r\n    // const [descuento, setDescuento] = useState(0)\r\n    // const [precioUnitario, setPrecioUnitario] = useState(0)\r\n    // const [precioUnitarioIgv, setPrecioUnitarioIgv] = useState(0)\r\n    // const [total, setTotal] = useState(0)\r\n    const [usuario, setUsuario] = useState('')\r\n    const [serie, setSerie] = useState('')\r\n    const [numero, setNumero] = useState(0)\r\n    const [tipoRegalo, setTipoRegalo] = useState('')\r\n    const [cantidadRegalo, setCantidadRegalo] = useState(0)\r\n    const [tipoDocumentoCliente, setTipoDocumentoCliente] = useState('')\r\n    const [numeroDocumentoCliente, setNumeroDocumentoCliente] = useState(0)\r\n    const [dateInicio, setDateInicio] = useState(new Date())\r\n    const [nombreCliente, setNombreCliente] = useState('')\r\n    const [tipoMoneda, setTipoMoneda] = useState('')\r\n    const [igv, setIgv] = useState(0.18)\r\n    const [celular, setCelular] = useState(0)\r\n    const [emailCliente, setEmailCliente] = useState('')\r\n    const [condicionPago, setCondicionPago] = useState('')\r\n    const [numeroOperacion, setNumeroOperacion] = useState('')\r\n    const [provincia, setProvincia] = useState('')\r\n    const [canalVenta, setCanalVenta] = useState('')\r\n    const [delivery, setDelivery] = useState(false)\r\n    const [direccion, setDireccion] = useState('')\r\n    const [referencias, setReferencias] = useState('')\r\n    const [gravada, setGravada] = useState(0)\r\n    const [descuentoTotal, setDescuentoTotal] = useState(0)\r\n    const [totalIgv, setTotalIgv] = useState(0)\r\n    const [totalDelivery, setTotalDelivery] = useState(0)\r\n    const [totalPagar, setTotalPagar] = useState(0)\r\n    const [filaProducto, setFilaProducto] = useState()\r\n    const [botonAgregar, setBotonAgregar] = useState(false)\r\n\r\n    const [listaProductos, setListaProductos] = useState([])\r\n    const [listaPresentacion, setListaPresentacion] = useState([[]])\r\n    const [presentacion, setPresentacion] = useState([])\r\n    const [codigoLista, setCodigoLista] = useState([])\r\n    const [listaCantidad, setListaCantidad] = useState([0])\r\n    const [descuentoLista, setDescuentoLista] = useState([0])\r\n    const [precioUnitarioLista, setPrecioUnitarioLista] = useState([0])\r\n    const [precioVentaLista, setPrecioVentaLista] = useState([0])\r\n    const [igvLista, setIgvLista] = useState([0])\r\n    const [totalLista, setTotalLista] = useState([0])\r\n    const [modoValidar, setModoValidar] = useState([true])\r\n    const [numeracion, setNumeracion] = useState(false)\r\n    const [detenerCreacion, setDetenerCreacion] = useState(false)\r\n    const [deshabilitarValidacion, setDeshabilitarValidacion] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const getProducts = async () =>{\r\n            try {\r\n                console.log(\"activaremos el axios\");\r\n                let res = await axios.get('http://46.183.113.134:3000/api/productos/listaProductosPorDescripcion');\r\n                console.log(res.data);\r\n                setListaProductos(res.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getProducts();\r\n    }, [])\r\n\r\n    const ExampleCustomInput = ({ value, onClick }) => (\r\n        <div className=\"d-flex border align-items-center justify-content-between mt-3\" onClick={onClick}>\r\n          <div>{value}</div>\r\n          <div>\r\n              <i className=\"far fa-calendar p-1 rounded-3 text-center\"></i>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    const deliveryChecked = (e) => {\r\n        console.log(\"entro\")\r\n        console.log(e.target.value)\r\n        if (e.target.value === \"true\") {\r\n            setDelivery(true)\r\n            return\r\n        }\r\n        setDelivery(false)\r\n        return\r\n    }\r\n\r\n    const enviarDatos = (e) => {\r\n        e.preventDefault()\r\n\r\n        axios.post('http://46.183.113.134:3000/api/ventas', {\r\n            lista,\r\n            usuario,\r\n            serie,\r\n            numero,\r\n            tipoRegalo,\r\n            cantidadRegalo,\r\n            tipoDocumentoCliente,\r\n            numeroDocumentoCliente,\r\n            nombreCliente,\r\n            tipoMoneda,\r\n            igv,\r\n            celular,\r\n            emailCliente,\r\n            condicionPago,\r\n            numeroOperacion,\r\n            provincia,\r\n            canalVenta,\r\n            delivery,\r\n            direccion,\r\n            referencias,\r\n            gravada,\r\n            descuentoTotal,\r\n            totalIgv,\r\n            totalDelivery,\r\n            totalPagar,\r\n        })\r\n\r\n    }\r\n\r\n    const agregarProducto = async () => {\r\n        console.log(\"AGREGAR PRODUCTO\");\r\n        let tamanoLista = lista.length;\r\n        setLista([\r\n            ...lista, {          \r\n                numeroLista: tamanoLista+1,\r\n                codigoLista: \"\",\r\n                descripcionLista: [],\r\n                presentacionLista: \"\",\r\n                cantidadLista: \"1\",\r\n                precioUnitarioLista: \"0\",\r\n                descuentoLista: \"0\",\r\n                precioVentaLista: 0,\r\n                igvLista: 0,\r\n                totalLista: 0,\r\n                modoValidar: true,\r\n            }\r\n        ]);\r\n        console.log(\"Estoy asignando la siguiente numeracion:\" , tamanoLista+1);\r\n        setDetenerCreacion(true);\r\n        setDeshabilitarValidacion(true);       \r\n    }\r\n\r\n    const presentaciones = (presentacion, numero) =>{\r\n        const getPresentaciones = async () =>{\r\n            try {\r\n                console.log(\"activaremos el axios\");\r\n                let res = await axios.get(`http://46.183.113.134:3000/api/productos?busquedaPorNombre=${presentacion}`);\r\n                console.log(\"Resultado de axios para presentaciones: \",res.data);\r\n                let arrayData= res.data.map(item => (item.presentacion))\r\n                let arrayProv = [...listaPresentacion,[]]\r\n                arrayProv[numero-1]= arrayData\r\n                setListaPresentacion(arrayProv);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getPresentaciones();\r\n    };\r\n    const completarCampos = (numeroItem) =>{\r\n        let elemento = lista[numeroItem-1];\r\n        const getCodigoYprecioUnitario = async () =>{\r\n            try {\r\n                console.log(elemento);\r\n                let res = await axios.get(`http://46.183.113.134:3000/api/productos?busquedaPorNombre=${elemento.descripcionLista}&busquedaPorPresentacion=${elemento.presentacionLista}`);\r\n                \r\n                let arrayProv = [...codigoLista];\r\n                arrayProv[numeroItem-1] = res.data[0].codigo;\r\n                setCodigoLista(arrayProv)\r\n\r\n                let listaProv = [...lista]\r\n                listaProv[numeroItem-1].codigoLista = res.data[0].codigo;\r\n                listaProv[numeroItem-1].precioUnitarioLista = res.data[0].precioUnitario;\r\n                setLista(listaProv);\r\n\r\n                let arrayProvb = [...precioUnitarioLista];\r\n                arrayProvb[numeroItem-1] = res.data[0].precioUnitario;\r\n                setPrecioUnitarioLista(arrayProvb)\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getCodigoYprecioUnitario();\r\n        setDeshabilitarValidacion(false);\r\n    }\r\n    useEffect(() => {\r\n\r\n        let sumaTotal = 0.00;\r\n        totalLista.forEach(value =>{\r\n            sumaTotal = sumaTotal + (value*1.0);\r\n        })\r\n        setTotalPagar(sumaTotal.toFixed(2));\r\n\r\n    }, [totalLista,setTotalPagar])\r\n\r\n    \r\n\r\n    const calculoFinal = (numeroItem) => {\r\n    \r\n        // let precioVenta=((precioUnitarioLista[numeroItem-1]*listaCantidad[numeroItem-1])-descuentoLista[numeroItem-1]);\r\n        console.log(numeroItem);\r\n        let listaProv = [...lista];\r\n        console.log(listaProv);\r\n        console.log(\"precioUnitario: \", listaProv[numeroItem-1].precioUnitarioLista);\r\n        console.log(\"cantidadLista: \", listaProv[numeroItem-1].cantidadLista);\r\n        console.log(\"descuentoLista: \", listaProv[numeroItem-1].descuentoLista);\r\n\r\n        let precioVenta = (listaProv[numeroItem-1].precioUnitarioLista*listaProv[numeroItem-1].cantidadLista)-listaProv[numeroItem-1].descuentoLista;\r\n        \r\n        console.log(\"Esta lista se imprime en calculo final\",listaProv);\r\n        listaProv[numeroItem-1].precioVentaLista = precioVenta.toFixed(2);\r\n        listaProv[numeroItem-1].igvLista = (precioVenta*0.18).toFixed(2);\r\n        listaProv[numeroItem-1].totalLista = (precioVenta*1.18).toFixed(2);\r\n            \r\n        let listaProvPrecioVentaLista = [...precioVentaLista]\r\n        listaProvPrecioVentaLista[numeroItem-1]= precioVenta.toFixed(2);\r\n        setPrecioVentaLista(listaProvPrecioVentaLista);\r\n    \r\n        let listaProvIgvLista = [...igvLista]\r\n        listaProvIgvLista[numeroItem-1]= (precioVenta*0.18).toFixed(2);\r\n        setIgvLista(listaProvIgvLista);\r\n    \r\n        let listaProvTotalLista = [...totalLista]\r\n        listaProvTotalLista[numeroItem-1]= (precioVenta*1.18).toFixed(2);\r\n        setTotalLista(listaProvTotalLista);\r\n\r\n        let modoValidarProv = [...lista]\r\n        modoValidarProv[numeroItem-1].modoValidar= false;\r\n        console.log(\"Esta lista se imprime al final de calculo final\", lista);\r\n        setLista(modoValidarProv);\r\n        setDetenerCreacion(false)\r\n    }\r\n\r\n    const eliminarFila = (numeroItem) => {\r\n        let sumaTotal = 0.00;\r\n        console.log(numeroItem);\r\n        console.log(\"Se activó el boton eleiminar\");\r\n        console.log(\"Lista original:\" ,lista);\r\n        let listaProv = [...lista]        \r\n        let numerador = 0;\r\n        let i = numeroItem-1;\r\n        console.log(i);\r\n        let nuevaLista = listaProv.filter((value, index )=>{return index!==i});\r\n        console.log(\"Cadena reducida\",nuevaLista);\r\n\r\n        let listaRenumerada = nuevaLista.map( function(obj){\r\n            numerador++;\r\n            sumaTotal = sumaTotal + (obj.totalLista*1.0);\r\n            let robj = {};\r\n            robj[\"numeroLista\"]= numerador;\r\n            robj[\"codigoLista\"]= obj.codigoLista;\r\n            robj[\"descripcionLista\"]= obj.descripcionLista;\r\n            robj[\"presentacionLista\"]= obj.presentacionLista;\r\n            robj[\"cantidadLista\"]= obj.cantidadLista;\r\n            robj[\"precioUnitarioLista\"]= obj.precioUnitarioLista;\r\n            robj[\"descuentoLista\"]= obj.descuentoLista;\r\n            robj[\"precioVentaLista\"]= obj.precioVentaLista;\r\n            robj[\"igvLista\"]= obj.igvLista;\r\n            robj[\"totalLista\"]= obj.totalLista;\r\n            robj[\"modoValidar\"]= obj.modoValidar;\r\n            return robj\r\n            // sumaTotal = sumaTotal + (item.totalLista*1.0);\r\n        })\r\n        console.log(\"Lista Final\", listaRenumerada);\r\n        setLista(listaRenumerada);\r\n        console.log(\"Suma Total\", sumaTotal);\r\n        setTotalPagar(sumaTotal.toFixed(2));\r\n    }\r\n\r\n    const manejadorEntrada = (event) =>{\r\n        let numeroItem = event.target.id;\r\n        let name=event.target.name;\r\n        switch (name) {\r\n            case 'descripcion':\r\n                let listaProvDescripcion = [...lista]\r\n                listaProvDescripcion[numeroItem-1].descripcionLista = event.target.value;\r\n                setLista(listaProvDescripcion)\r\n                presentaciones(event.target.value, numeroItem)\r\n                break;\r\n            case 'presentacion':\r\n                let listaProvPresentacion = [...lista]\r\n                listaProvPresentacion[numeroItem-1].presentacionLista = event.target.value;\r\n                setLista(listaProvPresentacion)\r\n                setPresentacion([...presentacion, event.target.value])\r\n                completarCampos(numeroItem)\r\n                break;\r\n            case 'cantidad':\r\n                let listaProvCantidad = [...lista];\r\n                listaProvCantidad[numeroItem-1].cantidadLista = event.target.value;\r\n                setLista(listaProvCantidad);\r\n                let listaProv = [...listaCantidad]\r\n                listaProv[numeroItem-1]=event.target.value;\r\n                setListaCantidad(listaProv);\r\n                break;\r\n            case 'descuento':\r\n                let listaProvDescuento = [...lista];\r\n                listaProvDescuento[numeroItem-1].descuentoLista = event.target.value;\r\n                setLista(listaProvDescuento);\r\n                let listaProvb = [...descuentoLista]\r\n                listaProvb[numeroItem-1]=event.target.value;\r\n                setDescuentoLista(listaProvb);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // calculoFinal(numeroItem)\r\n        // setValorDescripcion(event.target.value)        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                <h1 className=\"h5\">Vendedora / Nueva venta</h1>\r\n                {/* <div>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm me-1\">Copiar</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm me-1\" >Imprimir</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm\">Excel</button>\r\n                </div> */}\r\n            </div>\r\n            \r\n            {/* http://46.183.113.134:3000/api/ventas */}\r\n\r\n            <form onSubmit={ enviarDatos }>\r\n            {/* <div> */}\r\n                <div className=\"wrapper-client-info\">\r\n                    <div className=\"owner-info\">\r\n                        <div className=\"text-uppercase\">Jaramillo Torero de Paez Manuela Maria</div>\r\n                        <div>Av. Tacna Nro. 488</div>\r\n                    </div>\r\n                    <div className=\"ruc-info\">\r\n                        <div>RUC 10095588986</div>\r\n                        <div className=\"text-uppercase\">Nota de venta electrónica</div>\r\n                        <div>\r\n                            <span>NV10</span>-<span>9281</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">DESCRIPCIÓN</th>\r\n                                <th scope=\"col\">PRESENTACIÓN</th>\r\n                                <th scope=\"col\">COD</th>\r\n                                <th scope=\"col\">CANT</th>\r\n                                <th scope=\"col\">PU</th>\r\n                                <th scope=\"col\">DSCTO</th>\r\n                                <th scope=\"col\">PV</th>\r\n                                <th scope=\"col\">IGV</th>\r\n                                <th scope=\"col\">TOT</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                lista.map(valor=> (\r\n                                    <tr>\r\n                                        <th>{valor.numeroLista}</th>\r\n                                        <td>\r\n                                            <input id={valor.numeroLista} name = \"descripcion\" type=\"search\" onChange={manejadorEntrada} \r\n                                            placeholder=\"Ingrese un producto\" list=\"listaproductos\" disabled={!valor.modoValidar} value={valor.descripcionLista} />\r\n                                            <datalist id=\"listaproductos\">\r\n                                                    {\r\n                                                        listaProductos.map((item) =>\r\n                                                            (<option value={item} />)\r\n                                                        )\r\n                                                    }\r\n                                            </datalist>\r\n                                        </td>\r\n                                        <td>\r\n                                            <select id={valor.numeroLista} name =\"presentacion\" onChange={manejadorEntrada} value={valor.presentacionLista} disabled={!valor.modoValidar}>\r\n                                                    <option value=\"\">-</option>\r\n                                                    {   \r\n                                                        listaPresentacion[valor.numeroLista-1].map(\r\n                                                            (item) =>(<option value={item}>{item}</option>)\r\n                                                        )\r\n                                                    }\r\n                                            </select>\r\n                                        </td>\r\n                                        <td>{valor.codigoLista}</td>\r\n                                        <td>\r\n                                            <input id={valor.numeroLista} min=\"1\" step=\"1\" type=\"number\" name=\"cantidad\" value={valor.cantidadLista}\r\n                                             onChange={manejadorEntrada}  list=\"off\" autoComplete=\"off\" disabled={!valor.modoValidar}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            {valor.precioUnitarioLista}\r\n                                        </td>\r\n                                        <td>\r\n                                            <input id={valor.numeroLista} type=\"number\" name=\"descuento\" min=\"0\" value={valor.descuentoLista} \r\n                                            onChange={manejadorEntrada} disabled={!valor.modoValidar} />\r\n                                        </td>\r\n                                        <td>{valor.precioVentaLista}</td>\r\n                                        <td>{valor.igvLista}</td>\r\n                                        <td>{valor.totalLista}</td>\r\n                                        <td>\r\n                                            {\r\n                                                valor.modoValidar?\r\n                                                <button onClick= {()=>calculoFinal(valor.numeroLista)} className=\"btn btn-success btn-sm\" disabled={deshabilitarValidacion} >Validar</button>:\r\n                                                <button onClick= {()=>eliminarFila(valor.numeroLista)} className=\"btn btn-danger btn-sm\" >Eliminar</button>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={agregarProducto} disabled={detenerCreacion} >AGREGAR PRODUCTO</button>\r\n                        <p class=\"fs-5 me-5\" >{ `TOTAL: S/. ${totalPagar}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <div className=\"border-bottom\">Datos de regalos</div>\r\n                    <div className=\"mb-3\">\r\n                        {/* <label for=\"exampleInputEmail1\" className=\"form-label\">Email address</label> */}\r\n                        <label for=\"tipoRegalo\" className=\"form-label\">Tipo de regalo</label>\r\n                        <select onChange={ e => setTipoRegalo(e.target.value) } name=\"tipoRegalo\" className=\"form-select\" aria-label=\"Default select example\">\r\n                            <option selected>Elige el tipo de regalo</option>\r\n                            <option value=\"muestra\">Regalo muestra</option>\r\n                            <option value=\"tipo regalo 2\">Regalo tipo 2</option>\r\n                            <option value=\"tipo regalo 3\">Regalo tipo 3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"cantidadRegalo\">Cantidad (del 1 al 5):</label>\r\n                        <input onChange={ e => setCantidadRegalo(e.target.value) } type=\"number\" id=\"cantidadRegalo\" name=\"cantidadRegalo\" min=\"0\" max=\"5\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <div className=\"border-bottom\">Datos del cliente</div>\r\n                    <div>\r\n                        <label className=\"form-label\">Tipo de documento</label>\r\n                        <select onChange={ e => setTipoDocumentoCliente(e.target.value) } name=\"tipoDocumentoCliente\" className=\"form-select\">\r\n                            <option selected>Elige el tipo de documento</option>\r\n                            <option value=\"DNI\">DNI</option>\r\n                            <option value=\"documento 2\">documento tipo 2</option>\r\n                            <option value=\"documento 3\">documento tipo 3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"numeroDocumentoCliente\" className=\"form-label\">Nro. Documento</label>\r\n                        <input onChange={ e => setNumeroDocumentoCliente(e.target.value) } type=\"text\" className=\"form-control is-valid\" name=\"numeroDocumentoCliente\" id=\"numeroDocumentoCliente\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"nombreCliente\" className=\"form-label\">Nombre del cliente</label>\r\n                        <input onChange={ e => setNombreCliente(e.target.value) } type=\"text\" className=\"form-control\" name=\"nombreCliente\" id=\"nombreCliente\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"emailCliente\" className=\"form-label\">Email</label>\r\n                        <input onChange={ e => setEmailCliente(e.target.value) } type=\"email\" className=\"form-control\" name=\"emailCliente\" id=\"emailCliente\" aria-describedby=\"emailHelp\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\" for=\"celular\">Celular</label>\r\n                        <input onChange={ e => setCelular(e.target.value) } className=\"form-control\" type=\"tel\" name=\"celular\" id=\"celular\" pattern=\"[0-9]{9}\"></input>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Provincia</label>\r\n                        <select onChange={ e => setProvincia(e.target.value) } name=\"provincia\" className=\"form-select\">\r\n                            <option selected>Elige la provincia</option>\r\n                            <option value=\"Lima\">Lima</option>\r\n                            <option value=\"provincia tipo 2\">provincia tipo 2</option>\r\n                            <option value=\"provincia tipo 3\">provincia tipo 3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"form-check\">\r\n                            <input onChange={ e => deliveryChecked(e) } className=\"form-check-input\" type=\"radio\" value=\"true\" name=\"delivery\" id=\"delivery1\"></input>\r\n                            <label className=\"form-check-label\" for=\"delivery1\">\r\n                                Sí\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input onChange={ e => deliveryChecked(e) } className=\"form-check-input\" type=\"radio\" value=\"false\" name=\"delivery\" id=\"delivery2\"></input>\r\n                            <label className=\"form-check-label\" for=\"delivery2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"direccion\" className=\"form-label\">Dirección</label>\r\n                        <input onChange={ e => setDireccion(e.target.value) } type=\"text\" className=\"form-control\" name=\"direccion\" id=\"direccion\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"referencias\" className=\"form-label\">Referencias</label>\r\n                        <input onChange={ e => setReferencias(e.target.value) } type=\"text\" className=\"form-control\" name=\"referencias\" id=\"referencias\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <div className=\"border-bottom\">Datos del cliente</div>\r\n                    <div>\r\n                        <p className=\"m-0 me-1\">Fecha</p>\r\n                        <DatePicker \r\n                            selected={dateInicio} \r\n                            onChange={date => setDateInicio(date)} \r\n                            locale=\"es\"\r\n                            customInput={<ExampleCustomInput />} \r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Moneda</label>\r\n                        <select onChange={ e => setTipoMoneda(e.target.value) } name=\"tipoMoneda\" className=\"form-select\">\r\n                            <option selected>Elige el tipo de moneda</option>\r\n                            <option value=\"soles\">Soles</option>\r\n                            <option value=\"dolares\">Dolares</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"igv\" className=\"form-label\">IGV</label>\r\n                        <input onChange={ e => setIgv(e.target.value) } type=\"text\" className=\"form-control\" name=\"igv\" id=\"igv\" value=\"0.18\" disabled readonly></input>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Condicion de pago</label>\r\n                        <select onChange={ e => setCondicionPago(e.target.value) } name=\"condicionPago\" className=\"form-select\">\r\n                            <option selected>Elige la condicion de pago</option>\r\n                            <option value=\"tarjeta\">Tarjeta</option>\r\n                            <option value=\"efectivo\">Efectivo</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Canal de venta</label>\r\n                        <select onChange={ e => setCanalVenta(e.target.value) } name=\"canalVenta\" className=\"form-select\">\r\n                            <option selected>Elige la canal de venta</option>\r\n                            <option value=\"whatsapp\">whatsapp</option>\r\n                            <option value=\"llamada\">llamada</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Enviar\"></input>\r\n            {/* </div> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NuevaVenta\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":20,"column":12,"nodeType":"66","messageId":"67","endLine":20,"endColumn":16},{"ruleId":"64","severity":1,"message":"68","line":296,"column":17,"nodeType":"66","messageId":"67","endLine":296,"endColumn":24},{"ruleId":"64","severity":1,"message":"69","line":3,"column":21,"nodeType":"66","messageId":"67","endLine":3,"endColumn":35},{"ruleId":"64","severity":1,"message":"70","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":13},{"ruleId":"64","severity":1,"message":"71","line":12,"column":12,"nodeType":"66","messageId":"67","endLine":12,"endColumn":23},{"ruleId":"64","severity":1,"message":"72","line":12,"column":25,"nodeType":"66","messageId":"67","endLine":12,"endColumn":39},{"ruleId":"64","severity":1,"message":"73","line":19,"column":21,"nodeType":"66","messageId":"67","endLine":19,"endColumn":31},{"ruleId":"64","severity":1,"message":"74","line":20,"column":19,"nodeType":"66","messageId":"67","endLine":20,"endColumn":27},{"ruleId":"64","severity":1,"message":"75","line":21,"column":20,"nodeType":"66","messageId":"67","endLine":21,"endColumn":29},{"ruleId":"64","severity":1,"message":"76","line":33,"column":29,"nodeType":"66","messageId":"67","endLine":33,"endColumn":47},{"ruleId":"64","severity":1,"message":"77","line":39,"column":21,"nodeType":"66","messageId":"67","endLine":39,"endColumn":31},{"ruleId":"64","severity":1,"message":"78","line":40,"column":28,"nodeType":"66","messageId":"67","endLine":40,"endColumn":45},{"ruleId":"64","severity":1,"message":"79","line":41,"column":22,"nodeType":"66","messageId":"67","endLine":41,"endColumn":33},{"ruleId":"64","severity":1,"message":"80","line":42,"column":27,"nodeType":"66","messageId":"67","endLine":42,"endColumn":43},{"ruleId":"64","severity":1,"message":"81","line":44,"column":12,"nodeType":"66","messageId":"67","endLine":44,"endColumn":24},{"ruleId":"64","severity":1,"message":"82","line":44,"column":26,"nodeType":"66","messageId":"67","endLine":44,"endColumn":41},{"ruleId":"64","severity":1,"message":"83","line":45,"column":12,"nodeType":"66","messageId":"67","endLine":45,"endColumn":24},{"ruleId":"64","severity":1,"message":"84","line":45,"column":26,"nodeType":"66","messageId":"67","endLine":45,"endColumn":41},{"ruleId":"64","severity":1,"message":"85","line":57,"column":12,"nodeType":"66","messageId":"67","endLine":57,"endColumn":23},{"ruleId":"64","severity":1,"message":"86","line":57,"column":25,"nodeType":"66","messageId":"67","endLine":57,"endColumn":39},{"ruleId":"64","severity":1,"message":"87","line":58,"column":12,"nodeType":"66","messageId":"67","endLine":58,"endColumn":22},{"ruleId":"64","severity":1,"message":"88","line":58,"column":24,"nodeType":"66","messageId":"67","endLine":58,"endColumn":37},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'newData' is assigned a value but never used.","'registerLocale' is defined but never used.","'set' is defined but never used.","'descripcion' is assigned a value but never used.","'setDescripcion' is assigned a value but never used.","'setUsuario' is assigned a value but never used.","'setSerie' is assigned a value but never used.","'setNumero' is assigned a value but never used.","'setNumeroOperacion' is assigned a value but never used.","'setGravada' is assigned a value but never used.","'setDescuentoTotal' is assigned a value but never used.","'setTotalIgv' is assigned a value but never used.","'setTotalDelivery' is assigned a value but never used.","'filaProducto' is assigned a value but never used.","'setFilaProducto' is assigned a value but never used.","'botonAgregar' is assigned a value but never used.","'setBotonAgregar' is assigned a value but never used.","'modoValidar' is assigned a value but never used.","'setModoValidar' is assigned a value but never used.","'numeracion' is assigned a value but never used.","'setNumeracion' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]