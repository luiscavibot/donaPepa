[{"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\index.js":"1","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\App.jsx":"2","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\firebase.js":"3","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\Login.jsx":"4","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\PanelControl.jsx":"5","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ReportesVentas.jsx":"6","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ContenidosReportes.jsx":"7","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\NuevaVenta.jsx":"8"},{"size":262,"mtime":1611546348813,"results":"9","hashOfConfig":"10"},{"size":1399,"mtime":1610238526337,"results":"11","hashOfConfig":"10"},{"size":520,"mtime":1608598381149,"results":"12","hashOfConfig":"10"},{"size":8007,"mtime":1611546348811,"results":"13","hashOfConfig":"10"},{"size":9934,"mtime":1611283249219,"results":"14","hashOfConfig":"10"},{"size":1896,"mtime":1610332615226,"results":"15","hashOfConfig":"10"},{"size":23942,"mtime":1611074495370,"results":"16","hashOfConfig":"10"},{"size":50696,"mtime":1611546348812,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"u1u9io",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":43,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\index.js",[],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\App.jsx",[],["39","40"],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\firebase.js",[],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\Login.jsx",["41"],"  \r\nimport React from 'react';\r\nimport { auth} from '../firebase'\r\nimport { withRouter } from \"react-router-dom\";\r\n// import {db} from '../firebase';\r\nimport axios from \"axios\"\r\n\r\n\r\nconst Login = (props) => {\r\n    // React.useEffect(() => {\r\n    //   console.log(\"inicio el axios para enviar a nubefact\");\r\n    //   const emitir = async () =>{\r\n    //     const documento = {\r\n    //       operacion: \"generar_comprobante\",\r\n    //       tipo_de_comprobante: 1,\r\n    //       serie: \"FFF1\",\r\n    //       numero:54,\r\n    //       sunat_transaction: 1,\r\n    //       cliente_tipo_de_documento: 6,\r\n    //       cliente_numero_de_documento: \"20600695771\",\r\n    //       cliente_denominacion: \"NUBEFACT SA\",\r\n    //       cliente_direccion: \"CALLE LIBERTAD 116 MIRAFLORES - LIMA - PERU\",\r\n    //       cliente_email: \"lcastillov123@gmail.com\",\r\n    //       cliente_email_1: \"\",\r\n    //       cliente_email_2: \"\",\r\n    //       fecha_de_emision: \"22-01-2021\",\r\n    //       fecha_de_vencimiento: \"\",\r\n    //       moneda: 1,\r\n    //       tipo_de_cambio: \"\",\r\n    //       porcentaje_de_igv: 18.00,\r\n    //       descuento_global: \"\",\r\n    //       total_descuento: \"\",\r\n    //       total_anticipo: \"\",\r\n    //       total_gravada: 600,\r\n    //       total_inafecta: \"\",\r\n    //       total_exonerada: \"\",\r\n    //       total_igv: 108,\r\n    //       total_gratuita: \"\",\r\n    //       total_otros_cargos: \"\",\r\n    //       total: 708,\r\n    //       percepcion_tipo: \"\",\r\n    //       percepcion_base_imponible: \"\",\r\n    //       total_percepcion: \"\",\r\n    //       total_incluido_percepcion: \"\",\r\n    //       total_impuestos_bolsas: \"\",\r\n    //       detraccion: false,\r\n    //       observaciones: \"\",\r\n    //       documento_que_se_modifica_tipo: \"\",\r\n    //       documento_que_se_modifica_serie: \"\",\r\n    //       documento_que_se_modifica_numero: \"\",\r\n    //       tipo_de_nota_de_credito: \"\",\r\n    //       tipo_de_nota_de_debito: \"\",\r\n    //       enviar_automaticamente_a_la_sunat: true,\r\n    //       enviar_automaticamente_al_cliente: true,\r\n    //       condiciones_de_pago: \"\",\r\n    //       medio_de_pago: \"\",\r\n    //       placa_vehiculo: \"\",\r\n    //       orden_compra_servicio: \"\",  \r\n    //       formato_de_pdf: \"\",\r\n    //       generado_por_contingencia: \"\",\r\n    //       bienes_region_selva: \"\",\r\n    //       servicios_region_selva: \"\",\r\n    //       items: [\r\n    //             {\r\n    //               unidad_de_medida: \"NIU\",\r\n    //               codigo: \"001\",\r\n    //               codigo_producto_sunat: \"10000000\",\r\n    //               descripcion: \"DETALLE DEL PRODUCTO\",\r\n    //               cantidad: 1,\r\n    //               valor_unitario: 500,\r\n    //               precio_unitario: 590,\r\n    //               descuento: \"\",\r\n    //               subtotal: 500,\r\n    //               tipo_de_igv: 1,\r\n    //               igv: 90,\r\n    //               total: 590,\r\n    //               anticipo_regularizacion: false,\r\n    //               anticipo_documento_serie: \"\",\r\n    //               anticipo_documento_numero: \"\"\r\n    //             },\r\n    //             {\r\n    //               unidad_de_medida: \"NIU\",\r\n    //               codigo: \"001\",\r\n    //               codigo_producto_sunat: \"20000000\",\r\n    //               descripcion: \"DETALLE DEL PRODUCTO\",\r\n    //               cantidad: 1,\r\n    //               valor_unitario: 20,\r\n    //               precio_unitario: 23.60,\r\n    //               descuento: \"\",\r\n    //               subtotal: 100,\r\n    //               tipo_de_igv: 1,\r\n    //               igv: 18,\r\n    //               total: 118,\r\n    //               anticipo_regularizacion: false,\r\n    //               anticipo_documento_serie: \"\",\r\n    //               anticipo_documento_numero: \"\"\r\n    //             }\r\n    //       ],\r\n    //       guias: [\r\n    //               {\r\n    //                   guia_tipo: 1,\r\n    //                   guia_serie_numero: \"0001-23\"\r\n    //               }\r\n    //       ]    \r\n    //     };\r\n\r\n    //     const config = {\r\n    //       headers: { \r\n    //         \"Content-Type\" : \"application/json\"\r\n    //       }\r\n    //     };\r\n\r\n        \r\n    //     await axios.post('http://46.183.113.134:3000/api/ventas', documento, config)\r\n    //     .then(function (params) {\r\n    //       console.log(params.data);\r\n    //     })\r\n    //     .catch(function (params) {\r\n    //       console.log(params.data);\r\n    //     })       \r\n        \r\n    //   };\r\n    //   emitir();\r\n    // }, []);\r\n\r\n\r\n    const [email, setEmail] = React.useState('')\r\n    const [pass, setPass] = React.useState('')\r\n    const [error, setError] = React.useState(null)\r\n    const procesarDatos = e => {\r\n        e.preventDefault()\r\n        if(!email.trim()){\r\n            setError('Debe ingresar un email.')\r\n            return\r\n        }\r\n        if(!pass.trim()){\r\n            setError('Debe ingresar un password.')\r\n            return\r\n        }\r\n        if(pass.length < 6){\r\n            setError('La contraseña deber ser igual o mayor a 6 caracteres.')\r\n            return\r\n        }\r\n        setError(null)\r\n        login()\r\n    }\r\n    const login = React.useCallback(async() => {\r\n        try {\r\n            await auth.signInWithEmailAndPassword(email, pass)  \r\n            setEmail('')\r\n            setPass('')\r\n            setError(null)\r\n            props.history.push('/panelcontrol/reportes-ventas') \r\n        } catch (error) {\r\n            if(error.code === 'auth/user-not-found'){\r\n                setError('Usuario o contraseña incorrecto')\r\n            }\r\n            if(error.code === 'auth/wrong-password'){\r\n                setError('Usuario o contraseña incorrecto')\r\n            }\r\n        }\r\n    }, [email, pass, props.history])\r\n\r\n    // const FieldValue = admin.firestore.FieldValue;\r\n    // const docRef = db.collection('objects').doc('some-id');\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"container vh-100\">\r\n          <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n            <div className=\"col-4 border p-4 rounded\">\r\n              <form onSubmit={procesarDatos}>\r\n                <div className=\"d-flex justify-content-around p-3\">\r\n                  <h1 className=\"fs-3\">Iniciar Sesión</h1>\r\n                  <img src='./img/donapepa.png' className=\"logo\" alt=\"Doña Pepa\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <input type=\"email\" \r\n                         className=\"form-control\" \r\n                         id=\"exampleInputEmail1\" \r\n                         aria-describedby=\"emailHelp\" \r\n                         placeholder=\"Usuario\"\r\n                         onChange={ e => setEmail(e.target.value) }\r\n                         value={email}/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <input type=\"password\" \r\n                         className=\"form-control\" \r\n                         id=\"exampleInputPassword1\" \r\n                         placeholder=\"Contraseña\" \r\n                         onChange={ e => setPass(e.target.value) }\r\n                         value={pass}/>\r\n                </div>\r\n                    {\r\n                        error ? (\r\n                                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                                    {error}\r\n                                  </div>\r\n                        ) : null\r\n                    }\r\n                <div className=\"mb-3 form-check\">\r\n                  <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n                  <label className=\"form-check-label\">Recordar contraseña</label>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary w-100\">Ingresar</button>\r\n                <p className=\"text-center pt-3 olvidaste\">¿Olvidaste tu contraseña? Click aquí</p>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter (Login)\r\n","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\PanelControl.jsx",["42"],"import React from 'react'\r\n\r\n// import {Link, NavLink, withRouter} from 'react-router-dom'\r\nimport {\r\n    // BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink,\r\n    // Link,\r\n    // useParams,\r\n    useRouteMatch,\r\n    withRouter\r\n  } from \"react-router-dom\";\r\nimport {auth} from '../firebase'\r\nimport ReportesVentas from './ReportesVentas';\r\nimport NuevaVenta from './NuevaVenta';\r\n\r\nconst PanelControl = (props) => {\r\n\r\n    const [user, setUser] = React.useState(null)\r\n    React.useEffect(() => {\r\n        if(auth.currentUser){\r\n            setUser(auth.currentUser)\r\n        }else{\r\n            props.history.push('/')\r\n        }\r\n    }, [props.history])\r\n\r\n    let { path } = useRouteMatch();\r\n    const cerrarSesion = () => {\r\n        auth.signOut()\r\n            .then(() => {\r\n                props.history.push('/')\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n            <header className=\"navbar navbar-dark sticky-top  flex-md-nowrap p-0 border\" style={{background:'white'}}>\r\n                <div className=\"navbar-brand col-md-3 col-lg-2 me-0 px-3\" >Doña Pepa-G. Jaramillo</div>\r\n                <button className=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#sidebarMenu\" aria-controls=\"sidebarMenu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <i className=\"fas fa-bars text-dark\"></i>\r\n                </button>\r\n                <div className=\"w-100\"></div>\r\n                <ul className=\"navbar-nav px-3\"  >\r\n                    <li className=\"nav-item text-nowrap\">\r\n                        <button className=\"btn btn-ligth border my-1\" onClick={() => cerrarSesion()}>Cerrar Sesión</button>\r\n                    </li>\r\n                </ul>\r\n            </header>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <nav id=\"sidebarMenu\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar collapse\">\r\n                        <div className=\"position-sticky pt-3\">\r\n                            <div className=\"accordion\" id=\"accordionExample\">\r\n\r\n                                <div className=\"accordion-item\">\r\n                                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\">\r\n                                            DASHBOARD\r\n                                        </button>\r\n                                    </h2>\r\n                                    <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                                        <div className=\"accordion-body\">\r\n                                            <ul>\r\n                                                <li>sdasd</li>\r\n                                                <li>sdasd</li>\r\n                                                <li>sdasd</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"accordion-item\">\r\n                                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"true\" aria-controls=\"collapseTwo\">\r\n                                            REPORTES ADMIN\r\n                                        </button>\r\n                                    </h2>\r\n                                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                                        <div className=\"accordion-body\">\r\n                                            <NavLink \r\n                                                className=\"list-group-item text-start\" \r\n                                                to=\"/panelcontrol/reportes-ventas\"\r\n                                                exact\r\n                                            >\r\n                                                VENTAS\r\n                                            </NavLink>\r\n                                            <NavLink \r\n                                                className=\"list-group-item text-start\" \r\n                                                to=\"/panelcontrol/reportes-liquidacionmaestro\"\r\n                                                exact\r\n                                            >\r\n                                                LIQUIDACIÓN MAESTRO\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"accordion-item\">\r\n                                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                            VENDEDORA\r\n                                        </button>\r\n                                    </h2>\r\n                                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                                        <div className=\"accordion-body\">\r\n                                            <NavLink \r\n                                                className=\"list-group-item text-start\" \r\n                                                to=\"/panelcontrol/nueva-venta\"\r\n                                                exact\r\n                                            >\r\n                                                NUEVA VENTA\r\n                                            </NavLink>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"accordion-item\">\r\n                                    <h2 className=\"accordion-header\" id=\"headingFor\">\r\n                                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFor\" aria-expanded=\"false\" aria-controls=\"collapseFor\">\r\n                                            MANTENIMIENTO\r\n                                        </button>\r\n                                    </h2>\r\n                                    <div id=\"collapseFor\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFor\" data-bs-parent=\"#accordionExample\">\r\n                                        <div className=\"accordion-body\">\r\n                                            <ul>\r\n                                                <li>sdasd</li>\r\n                                                <li>sdasd</li>\r\n                                                <li>sdasd</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"accordion-item\">\r\n                                    <h2 className=\"accordion-header\" id=\"headingFive\">\r\n                                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseFive\" aria-expanded=\"false\" aria-controls=\"collapseFive\">\r\n                                            CONFIGURACIÓN\r\n                                        </button>\r\n                                    </h2>\r\n                                    <div id=\"collapseFive\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingFive\" data-bs-parent=\"#accordionExample\">\r\n                                        <div className=\"accordion-body\">\r\n                                            <ul>\r\n                                                <li>sdasd</li>\r\n                                                <li>sdasd</li>\r\n                                                <li>sdasd</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n                \r\n                    <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n                        <Switch>\r\n                            <Route path={`${path}/reportes-ventas`}>\r\n                                <ReportesVentas />\r\n                            </Route>\r\n                            <Route path={`${path}/reportes-liquidacionmaestro`}>\r\n                                <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                                    <h1 className=\"h5\">Reportes de Liquidación Maestro</h1>\r\n                                </div>\r\n                            </Route>\r\n                            <Route path={`${path}/nueva-venta`}>\r\n                                <NuevaVenta />\r\n                            </Route>\r\n                        </Switch>\r\n                    </main>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(PanelControl)\r\n","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ReportesVentas.jsx",[],"C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\ContenidosReportes.jsx",["43"],"import React, { useState } from \"react\";\r\nimport DatePicker, {registerLocale} from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../css/adicional.css';\r\nimport es from 'date-fns/locale/es';\r\nimport {db} from '../firebase';\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\n// import { set } from \"date-fns\";\r\n//NO BORRAR HASTA ESTAR SEGURO\r\n// import { set } from \"date-fns\";\r\n//NO BORRAR HASTA ESTAR SEGURO\r\nregisterLocale(\"es\", es);\r\n\r\n\r\nconst estilo = {\r\n    \r\n    iconoCalendario:{\r\n        background: '#E5E5E5' ,\r\n        color: '#646464',\r\n    },\r\n    dateContainer:{\r\n        padding: '2px',\r\n    },\r\n    dateContainerValue:{\r\n        padding: '2px',\r\n        width: '8vw',\r\n        textAlign: 'center',\r\n    },\r\n    dateLabel:{\r\n        lineHeight: 3.8,\r\n    },\r\n    desplegable:{\r\n        width: '8vw',\r\n        height: '4vh',\r\n    },\r\n    buscador:{\r\n        width: '6vw',\r\n        height: '4vh',\r\n    },\r\n    iconos:{\r\n        width: 'auto',\r\n        fontSize: '20px',\r\n        height: 'auto'\r\n    },\r\n\r\n    hoverModificado: {\r\n        ':hover': {\r\n            color: '#0d6efd',\r\n            background: 'white',\r\n            borderColor: '#0d6efd',\r\n        }\r\n    }\r\n        \r\n    \r\n};\r\n\r\nconst ContenidosReportes = (props) => {\r\n\r\n    //Hook de efecto, con ejecución solo al inicio\r\n    const [rows, setRows] = React.useState([])\r\n    //Selects\r\n    const [vendedor, setVendedor] = React.useState('Todos');\r\n    const handleChangeVendedor = (event) => {\r\n        setVendedor(event.target.value);\r\n    };\r\n    const [ventasMensual, setVentasMensual] = React.useState('Todos');\r\n    const handleChangeVentasMensual = (event) => {\r\n        setVentasMensual(event.target.value);\r\n    };\r\n    const [metodoPago, setMetodoPago] = React.useState('Todos');\r\n    const handleChangeMetodoPago = (event) => {\r\n        setMetodoPago(event.target.value);\r\n    };\r\n    const [locales, setLocales] = React.useState(\"Todos\");\r\n    const handleChangeLocales = (event) => {\r\n        setLocales(event.target.value);\r\n    };\r\n    const [producto, setProducto] = React.useState(\"Todos\");\r\n    const handleChangeProducto = (event) => {\r\n        setProducto(event.target.value);\r\n    };\r\n    const [ventasMedio, setVentasMedio] = React.useState([]);\r\n    const [whatsapp, setWhatsapp] = React.useState(false);\r\n    const [celular, setCelular] = React.useState(false);\r\n    const [internet, setInternet] = React.useState(false);\r\n    const [ventasMedioTodos, setVentasMedioTodos] = React.useState(true);\r\n    const [contador, setContador] = React.useState(1)\r\n    const [buscador, setBuscador] = useState(false)\r\n\r\n    const buscadorGeneral = (event) => {\r\n        // console.log(event.target.value);\r\n        // setBuscador(event.target.value);\r\n        if (event.target.value===\"\") {\r\n            setBuscador(true);\r\n        }else{\r\n            consultaBuscador(event.target.value);\r\n        }\r\n    }\r\n    const consultaBuscador = async(entrada) =>{\r\n        \r\n        try {\r\n            let DocumentoVentaRef = db.collection('Usuario').doc('bb23WWdq9Idmujt3p6K7').collection('DocumentoVenta').limit(10);\r\n            // DocumentoVentaRef = (vendedor !== 'Todos')?(DocumentoVentaRef.where('vendedor', '==', vendedor)):DocumentoVentaRef;\r\n            // DocumentoVentaRef = (ventasMensual !== 'Todos')?(DocumentoVentaRef.where('fecha', '==', ventasMensual)):DocumentoVentaRef;\r\n            // DocumentoVentaRef = ( metodoPago !== 'Todos')?(DocumentoVentaRef.where('metodoPago', '==', metodoPago)):DocumentoVentaRef;\r\n            // DocumentoVentaRef = ( locales!== 'Todos')?(DocumentoVentaRef.where('local', '==',locales )):DocumentoVentaRef;\r\n            // DocumentoVentaRef = ( producto!== 'Todos')?(DocumentoVentaRef.where('producto', '==', producto )):DocumentoVentaRef;\r\n            // DocumentoVentaRef = ( whatsapp || celular || internet )?(DocumentoVentaRef.where('ventasMedio', 'in', ventasMedio)):DocumentoVentaRef;\r\n            // DocumentoVentaRef = DocumentoVentaRef.where('fecha', '>=', dateInicio.setHours(0,0,0,0));\r\n            // let preQuery = DocumentoVentaRef.where('fecha', '<=', dateFin.setHours(23,59,59,0)).orderBy('fecha');\r\n            let query = DocumentoVentaRef.where('cliente', 'in', [entrada]);\r\n            let data = await query.get();\r\n            let arrayData = data.docs.map(doc => ({id: doc.id, ...doc.data()}));\r\n            if (data.docs.length===0) {\r\n             setBuscador(true)  \r\n            }\r\n            setRows([...arrayData]); \r\n            \r\n            // setPrimero(data.docs[0]); console.log('El primero es:', data.docs[0]);\r\n            // setUltimo(data.docs[data.docs.length - 1]); console.log('El ultimo es:', data.docs[data.docs.length - 1]);\r\n\r\n            // let newData = await preQuery.startAfter(data.docs[data.docs.length - 1]).get()\r\n            // if (newData.empty) {\r\n            //     setDesactivar(true)\r\n            // }else{\r\n            //     setDesactivar(false)\r\n            // }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    } \r\n\r\n    const handleInputVentasmedio = (event) =>{\r\n        const value = event.target.checked;\r\n        const name = event.target.name;\r\n        let arrayProv = ventasMedio;\r\n        let indice = 0;\r\n        switch (name) {\r\n            case 'Whatsapp':\r\n                if (value&&celular&&internet){\r\n                    setCelular(false);setInternet(false);setWhatsapp(false);setVentasMedioTodos(true);\r\n                    setVentasMedio([]);\r\n                }\r\n                else{   \r\n                        setWhatsapp(value);\r\n                        setVentasMedioTodos(false);\r\n                        indice = arrayProv.indexOf(name);\r\n                        value?(arrayProv.push(name)):(arrayProv.splice(indice, 1));\r\n                        setVentasMedio([...arrayProv])\r\n                    }\r\n                break;\r\n            case 'Celular':\r\n                if (value&&whatsapp&&internet){\r\n                    setCelular(false);setInternet(false);setWhatsapp(false);setVentasMedioTodos(true)\r\n                    setVentasMedio([]);\r\n                }\r\n                else{\r\n                        setCelular(value);\r\n                        setVentasMedioTodos(false);\r\n                        indice = arrayProv.indexOf(name);\r\n                        value?(arrayProv.push(name)):(arrayProv.splice(indice, 1));\r\n                        setVentasMedio([...arrayProv])\r\n                    }\r\n                break;\r\n            case 'Internet':\r\n                if (value&&celular&&whatsapp){\r\n                    setCelular(false);setInternet(false);setWhatsapp(false);setVentasMedioTodos(true)\r\n                    setVentasMedio([]);\r\n                }\r\n                else{\r\n                        setInternet(value);\r\n                        setVentasMedioTodos(false);\r\n                        indice = arrayProv.indexOf(name);\r\n                        value?(arrayProv.push(name)):(arrayProv.splice(indice, 1));\r\n                        setVentasMedio([...arrayProv])\r\n                    }\r\n                break;\r\n            default:\r\n                if (value) {\r\n                    setVentasMedioTodos(value);\r\n                    setWhatsapp(false);\r\n                    setCelular(false);\r\n                    setInternet(false);\r\n                    break;\r\n                }\r\n                \r\n        }\r\n    }\r\n    \r\n    const [dateInicio, setDateInicio] = useState(new Date());\r\n    const [dateFin, setDateFin] = useState(new Date());\r\n\r\n    const [ultimo, setUltimo] = React.useState(null)\r\n    const [desactivar, setDesactivar] = React.useState(false)\r\n\r\n    const [primero, setPrimero] = React.useState(null)\r\n\r\n    React.useEffect(() => {\r\n        console.log('Se activó el Use Efect!!!');\r\n        setContador(1);\r\n        setDesactivar(true);\r\n        let DocumentoVentaRef = db.collection('Usuario').doc('bb23WWdq9Idmujt3p6K7').collection('DocumentoVenta').limit(10);\r\n        DocumentoVentaRef = (vendedor !== 'Todos')?(DocumentoVentaRef.where('vendedor', '==', vendedor)):DocumentoVentaRef;\r\n        DocumentoVentaRef = (ventasMensual !== 'Todos')?(DocumentoVentaRef.where('mes', '==', ventasMensual)):DocumentoVentaRef;\r\n        DocumentoVentaRef = ( metodoPago !== 'Todos')?(DocumentoVentaRef.where('metodoPago', '==', metodoPago)):DocumentoVentaRef;\r\n        DocumentoVentaRef = ( locales!== 'Todos')?(DocumentoVentaRef.where('local', '==',locales )):DocumentoVentaRef;\r\n        DocumentoVentaRef = ( producto!== 'Todos')?(DocumentoVentaRef.where('producto', '==', producto )):DocumentoVentaRef;\r\n        DocumentoVentaRef = ( whatsapp || celular || internet )?(DocumentoVentaRef.where('ventasMedio', 'in', ventasMedio)):DocumentoVentaRef;\r\n        DocumentoVentaRef = DocumentoVentaRef.where('fecha', '>=', dateInicio.setHours(0,0,0,0));\r\n        DocumentoVentaRef = DocumentoVentaRef.where('fecha', '<=', dateFin.setHours(23,59,59,0));\r\n        let query = DocumentoVentaRef.orderBy('fecha');\r\n        \r\n        const obtenerDatos = async () => {\r\n            try {\r\n                const data = await query.get();\r\n\r\n                \r\n                const arrayData = data.docs.map(doc => ({id: doc.id, ...doc.data()}));\r\n                console.log(arrayData);\r\n                setRows([...arrayData]);\r\n                setPrimero(data.docs[0]); console.log('El primero es:', data.docs[0]);\r\n                setUltimo(data.docs[data.docs.length - 1]); console.log('El último es:', data.docs[data.docs.length - 1]);\r\n                if (data.empty) {\r\n                    setDesactivar(true)\r\n                }else{\r\n                    setDesactivar(false)\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        } \r\n        obtenerDatos();\r\n        setBuscador(false);\r\n    }, [vendedor, ventasMensual, metodoPago, locales, producto, ventasMedio, dateInicio, dateFin, whatsapp, celular, internet, buscador ])\r\n    \r\n    const siguiente = async() =>{\r\n        // console.log('siguiente');\r\n        // console.log('Valor inicial de primero:',primero);\r\n        // console.log('Valor inicial de ultimo:',ultimo);\r\n        setContador(contador+1);\r\n        try {\r\n            let DocumentoVentaRef = db.collection('Usuario').doc('bb23WWdq9Idmujt3p6K7').collection('DocumentoVenta').limit(10);\r\n            DocumentoVentaRef = (vendedor !== 'Todos')?(DocumentoVentaRef.where('vendedor', '==', vendedor)):DocumentoVentaRef;\r\n            DocumentoVentaRef = (ventasMensual !== 'Todos')?(DocumentoVentaRef.where('mes', '==', ventasMensual)):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( metodoPago !== 'Todos')?(DocumentoVentaRef.where('metodoPago', '==', metodoPago)):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( locales!== 'Todos')?(DocumentoVentaRef.where('local', '==',locales )):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( producto!== 'Todos')?(DocumentoVentaRef.where('producto', '==', producto )):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( whatsapp || celular || internet )?(DocumentoVentaRef.where('ventasMedio', 'in', ventasMedio)):DocumentoVentaRef;\r\n            DocumentoVentaRef = DocumentoVentaRef.where('fecha', '>=', dateInicio.setHours(0,0,0,0));\r\n            let preQuery = DocumentoVentaRef.where('fecha', '<=', dateFin.setHours(23,59,59,0)).orderBy('fecha');\r\n            let query = preQuery.startAfter(ultimo);\r\n            let data = await query.get();\r\n            let arrayData = data.docs.map(doc => ({id: doc.id, ...doc.data()}));\r\n            setRows([...arrayData]); \r\n            \r\n            setPrimero(data.docs[0]); console.log('El primero es:', data.docs[0]);\r\n            setUltimo(data.docs[data.docs.length - 1]); console.log('El ultimo es:', data.docs[data.docs.length - 1]);\r\n\r\n            let newData = await preQuery.startAfter(data.docs[data.docs.length - 1]).get()\r\n            if (newData.empty) {\r\n                setDesactivar(true)\r\n            }else{\r\n                setDesactivar(false)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const anterior = async() =>{\r\n        console.log('anterior');\r\n        \r\n        try {\r\n            let DocumentoVentaRef = db.collection('Usuario').doc('bb23WWdq9Idmujt3p6K7').collection('DocumentoVenta').limit(10);\r\n            DocumentoVentaRef = (vendedor !== 'Todos')?(DocumentoVentaRef.where('vendedor', '==', vendedor)):DocumentoVentaRef;\r\n            DocumentoVentaRef = (ventasMensual !== 'Todos')?(DocumentoVentaRef.where('mes', '==', ventasMensual)):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( metodoPago !== 'Todos')?(DocumentoVentaRef.where('metodoPago', '==', metodoPago)):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( locales!== 'Todos')?(DocumentoVentaRef.where('local', '==',locales )):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( producto!== 'Todos')?(DocumentoVentaRef.where('producto', '==', producto )):DocumentoVentaRef;\r\n            DocumentoVentaRef = ( whatsapp || celular || internet )?(DocumentoVentaRef.where('ventasMedio', 'in', ventasMedio)):DocumentoVentaRef;\r\n            DocumentoVentaRef = DocumentoVentaRef.where('fecha', '<=', dateInicio.setHours(0,0,0,0));\r\n            let preQuery = DocumentoVentaRef.where('fecha', '>=', dateFin.setHours(23,59,59,0));\r\n            // console.log('Valor inicial de primero:',primero);\r\n            // console.log('Valor inicial de ultimo:',ultimo);\r\n            let query = preQuery.endBefore(primero);\r\n            let data = await query.get();\r\n            console.log(data);\r\n            let arrayData = data.docs.map(doc => ({id: doc.id, ...doc.data()}));\r\n            setRows([...arrayData]); \r\n            setPrimero(data.docs[0]); \r\n            setUltimo(data.docs[data.docs.length - 1]); \r\n            let newData = await preQuery.endBefore(data.docs[data.docs.length - 1]).get()\r\n\r\n            // if (newData.empty) {\r\n            //     setDesactivar(true)\r\n            // }else{\r\n            //     setDesactivar(false)\r\n            // }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    const ExampleCustomInput = ({ value, onClick }) => (\r\n        <div className=\"d-flex border align-items-center justify-content-between mt-3\" onClick={onClick}>\r\n          <div style={estilo.dateContainerValue}>{value}</div>\r\n          <div style={estilo.dateContainer}>\r\n              <i className=\"far fa-calendar p-1 rounded-3 text-center\" style={estilo.iconoCalendario}></i>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {/* Aquí hay informacion de {props.tab} */}\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"m-0 me-1\" style={estilo.dateLabel}>Fecha de inicio:</p>\r\n                    <DatePicker \r\n                        selected={dateInicio} \r\n                        onChange={date => setDateInicio(date)} \r\n                        locale=\"es\"\r\n                        customInput={<ExampleCustomInput />} \r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"m-0 me-1\" style={estilo.dateLabel}>Fin:</p>\r\n                    <DatePicker \r\n                        selected={dateFin} \r\n                        onChange={date => setDateFin(date)} \r\n                        locale=\"es\"\r\n                        customInput={<ExampleCustomInput />} \r\n                        dateFormat=\"dd/MM/yyyy\"\r\n                    />\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"m-0 me-1\" style={estilo.dateLabel}>Vendedores:</p>\r\n                    <div className=\"dropdown mt-3\">\r\n                        <select value={vendedor} onChange={handleChangeVendedor} className=\"form-select py-1 lh-1\" style={estilo.desplegable}>\r\n                            <option value=\"Todos\">Todos</option>\r\n                            <option value=\"Luis\">Luis</option>\r\n                            <option value=\"Pamela\">Pamela</option>\r\n                            <option value=\"Renzo\">Renzo</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"m-0 me-2\" style={estilo.dateLabel}>Venta mensual:</p>\r\n                    <div className=\"dropdown mt-3\">\r\n                        <select value={ventasMensual} onChange={handleChangeVentasMensual} className=\"form-select py-1 lh-1\" style={estilo.desplegable}>\r\n                            <option value=\"Todos\">Todos</option>\r\n                            <option value=\"Enero\">Enero</option>\r\n                            <option value=\"Febrero\">Febrero</option>\r\n                            <option value=\"Marzo\">Marzo</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <input className=\"form-control form-control-sm mt-3 w-100\" type=\"text\" placeholder=\"Búsqueda general\" style={estilo.buscador} onChange={buscadorGeneral}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className=\"d-flex\">\r\n                    <p className=\"m-0 me-2\" style={estilo.dateLabel}>Métodos de pago:</p>\r\n                    <div className=\"dropdown mt-3\">\r\n                        <select className=\"form-select py-1 lh-1\" value={metodoPago} onChange={handleChangeMetodoPago} style={estilo.desplegable}>\r\n                            <option value=\"Todos\">Todos</option>\r\n                            <option value=\"Transferencia\">Transferencia</option>\r\n                            <option value=\"Efectivo\">Efectivo</option>\r\n                            <option value=\"Tarjeta\">Tarjeta</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex align-content-center\">\r\n                    <p className=\"m-0 me-2\" style={estilo.dateLabel}>Ventas por medio de:</p>\r\n                    <div className=\"btn-group d-flex align-content-center\" style={{marginTop:'10px'}} role=\"group\">\r\n                        <input type=\"checkbox\" className=\"btn-check\" checked={whatsapp} id=\"btncheck1\" name=\"Whatsapp\" onChange = {handleInputVentasmedio}/>\r\n                        <label className=\"btn btn-outline-primary\" for=\"btncheck1\" style={estilo.iconos}><i className=\"fab fa-whatsapp\" ></i></label>\r\n                        \r\n                        <input type=\"checkbox\" className=\"btn-check\" checked={celular} id=\"btncheck2\" name=\"Celular\" onChange= {handleInputVentasmedio}/>\r\n                        <label className=\"btn btn-outline-primary\" for=\"btncheck2\" style={estilo.iconos}><i className=\"fas fa-phone\" ></i></label>\r\n                        \r\n                        <input type=\"checkbox\" className=\"btn-check\" checked={internet} id=\"btncheck3\" name=\"Internet\" onChange= {handleInputVentasmedio}/>\r\n                        <label className=\"btn btn-outline-primary\" for=\"btncheck3\" style={estilo.iconos}><i className=\"fas fa-globe\" ></i></label>\r\n\r\n                        <input type=\"checkbox\" className=\"btn-check\" checked={ventasMedioTodos} id=\"btncheck4\" name=\"Todos\" onChange= {handleInputVentasmedio}/>\r\n                        <label className=\"btn btn-outline-primary\" for=\"btncheck4\" style={estilo.iconos}><i className=\"fas fa-border-all\"></i></label>\r\n \r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"m-0 me-2\" style={estilo.dateLabel}>Locales:</p>\r\n                    <div className=\"dropdown mt-3\">\r\n                        <select className=\"form-select py-1 lh-1\" value={locales} onChange={handleChangeLocales} style={estilo.desplegable}>\r\n                            <option selected value=\"Todos\">Todos</option>\r\n                            <option value=\"Pepa grande\">Pepa grande</option>\r\n                            <option value=\"Puntitos del sabor\">Puntitos del sabor</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <p className=\"m-0 me-2\" style={estilo.dateLabel}>Producto:</p>\r\n                    <div className=\"dropdown mt-3\">\r\n                        <select className=\"form-select py-1 lh-1\" value={producto} onChange={handleChangeProducto} style={estilo.desplegable}>\r\n                            <option selected value=\"Todos\">Todos</option>\r\n                            <option selected value=\"Turron XL\">Turron XL</option>\r\n                            <option value=\"Don Pepon\">Don Pepon</option>\r\n                            <option value=\"Turron morado\">Turron morado</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <table className=\"table\" id=\"tblData\">\r\n                <thead className=\"table-ligth\">\r\n                    <tr>\r\n                        <th scope=\"col\">Tipo</th>\r\n                        <th scope=\"col\">Serie</th>\r\n                        <th scope=\"col\">Número</th>\r\n                        <th scope=\"col\">Cliente</th>\r\n                        <th scope=\"col\">Categoría</th>\r\n                        <th scope=\"col\">Producto</th>\r\n                        <th scope=\"col\">Cant.</th>\r\n                        <th scope=\"col\">Dscto.</th>\r\n                        <th scope=\"col\">P. Unit.</th>\r\n                        <th scope=\"col\">Vendedor</th>\r\n                        <th scope=\"col\">Monto</th>\r\n                        <th scope=\"col\">Fecha</th>\r\n                        <th scope=\"col\">Local</th>\r\n                        <th scope=\"col\">Estado</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                        {rows.map((row) => (\r\n                            <tr>\r\n                                <td >{row.tipoDocumento}</td>\r\n                                <td >{row.serie}</td>\r\n                                <td >{row.numero}</td>\r\n                                <td >{row.cliente}</td>\r\n                                <td >{row.categoria}</td>\r\n                                <td >{row.producto}</td>\r\n                                <td >{row.cantidad}</td>\r\n                                <td >{row.descuento}</td>\r\n                                <td >{row.precioUnitario}</td>\r\n                                <td >{row.vendedor}</td>\r\n                                <td >{row.monto}</td>\r\n                                <td >{moment(row.fecha).format('L')}</td>\r\n                                <td >{row.local}</td>\r\n                                <td >{row.estado}</td>\r\n                            </tr>\r\n                        ))}\r\n                </tbody>\r\n            </table>\r\n            <div className=\"d-flex justify-content-end\">\r\n                <nav aria-label=\"Page navigation example\">\r\n                    <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <button className=\"page-link\" onClick={() => anterior()}>Anterior</button>\r\n                        </li>\r\n                        <li className=\"page-item\"><input type=\"text\" className=\"page-link btnPagina\" value={contador}/></li>\r\n                        <li className=\"page-item\">\r\n                            <button className=\"page-link\" onClick={() => siguiente()} disabled={desactivar}>Siguiente</button>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContenidosReportes\r\n","C:\\Users\\Usuario\\Desktop\\proyectoDonaPepa\\donapepa\\src\\components\\NuevaVenta.jsx",["44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker, {registerLocale} from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport { set } from 'date-fns/esm'\r\n\r\nconst NuevaVenta = () => {\r\n\r\n    const [lista, setLista] = useState([])\r\n    // const [numLista, setNumLista] = useState(0)\r\n    // const [cod, setCod] = useState(0)\r\n    const [descripcion, setDescripcion] = useState('')\r\n    // const [unidades, setUnidades] = useState('')\r\n    // const [cantidad, setCantidad] = useState(0)\r\n    // const [descuento, setDescuento] = useState(0)\r\n    // const [precioUnitario, setPrecioUnitario] = useState(0)\r\n    // const [precioUnitarioIgv, setPrecioUnitarioIgv] = useState(0)\r\n    // const [total, setTotal] = useState(0)\r\n    const [usuario, setUsuario] = useState('')\r\n    const [serie, setSerie] = useState('')\r\n    const [numero, setNumero] = useState(0)\r\n    const [tipoRegalo, setTipoRegalo] = useState('')\r\n    const [cantidadRegalo, setCantidadRegalo] = useState(0)\r\n    const [tipoDocumentoCliente, setTipoDocumentoCliente] = useState('')\r\n    const [numeroDocumentoCliente, setNumeroDocumentoCliente] = useState(0)\r\n    const [dateInicio, setDateInicio] = useState(new Date())\r\n    const [nombreCliente, setNombreCliente] = useState('')\r\n    const [tipoMoneda, setTipoMoneda] = useState('')\r\n    const [igv, setIgv] = useState(0.18)\r\n    const [celular, setCelular] = useState(0)\r\n    const [emailCliente, setEmailCliente] = useState('')\r\n    const [condicionPago, setCondicionPago] = useState('')\r\n    const [numeroOperacion, setNumeroOperacion] = useState('')\r\n    const [provincia, setProvincia] = useState('')\r\n    const [canalVenta, setCanalVenta] = useState('')\r\n    const [delivery, setDelivery] = useState(false)\r\n    const [direccion, setDireccion] = useState('')\r\n    const [referencias, setReferencias] = useState('')\r\n    const [gravada, setGravada] = useState(0)\r\n    const [descuentoTotal, setDescuentoTotal] = useState(0)\r\n    const [totalIgv, setTotalIgv] = useState(0)\r\n    const [totalDelivery, setTotalDelivery] = useState(0)\r\n    const [totalPagar, setTotalPagar] = useState(0)\r\n    const [filaProducto, setFilaProducto] = useState()\r\n    const [botonAgregar, setBotonAgregar] = useState(false)\r\n\r\n    const [listaProductos, setListaProductos] = useState([])\r\n    const [listaPresentacion, setListaPresentacion] = useState([[]])\r\n    const [presentacion, setPresentacion] = useState([])\r\n    const [codigoLista, setCodigoLista] = useState([])\r\n    const [listaCantidad, setListaCantidad] = useState([0])\r\n    const [descuentoLista, setDescuentoLista] = useState([0])\r\n    const [precioUnitarioLista, setPrecioUnitarioLista] = useState([0])\r\n    const [precioVentaLista, setPrecioVentaLista] = useState([0])\r\n    const [igvLista, setIgvLista] = useState([0])\r\n    const [totalLista, setTotalLista] = useState([0])\r\n    const [modoValidar, setModoValidar] = useState([true])\r\n    const [numeracion, setNumeracion] = useState(false)\r\n    const [detenerCreacion, setDetenerCreacion] = useState(false)\r\n    const [deshabilitarValidacion, setDeshabilitarValidacion] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const getProducts = async () =>{\r\n            try {\r\n                console.log(\"activaremos el axios\");\r\n                let res = await axios.get('http://46.183.113.134:3000/api/productos/listaProductosPorDescripcion');\r\n                console.log(res.data);\r\n                setListaProductos(res.data);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getProducts();\r\n    }, [])\r\n\r\n    const ExampleCustomInput = ({ value, onClick }) => (\r\n        <div className=\"d-flex border align-items-center justify-content-between mt-3\" onClick={onClick}>\r\n          <div>{value}</div>\r\n          <div>\r\n              <i className=\"far fa-calendar p-1 rounded-3 text-center\"></i>\r\n          </div>\r\n        </div>\r\n    );\r\n\r\n    const deliveryChecked = (e) => {\r\n        console.log(\"entro\")\r\n        console.log(e.target.value)\r\n        if (e.target.value === \"true\") {\r\n            setDelivery(true)\r\n            return\r\n        }\r\n        setDelivery(false)\r\n        return\r\n    }\r\n\r\n    const enviarDatos = (e) => {\r\n        e.preventDefault()\r\n\r\n        axios.post('http://46.183.113.134:3000/api/ventas', {\r\n            lista,\r\n            usuario,\r\n            serie,\r\n            numero,\r\n            tipoRegalo,\r\n            cantidadRegalo,\r\n            tipoDocumentoCliente,\r\n            numeroDocumentoCliente,\r\n            nombreCliente,\r\n            tipoMoneda,\r\n            igv,\r\n            celular,\r\n            emailCliente,\r\n            condicionPago,\r\n            numeroOperacion,\r\n            provincia,\r\n            canalVenta,\r\n            delivery,\r\n            direccion,\r\n            referencias,\r\n            gravada,\r\n            descuentoTotal,\r\n            totalIgv,\r\n            totalDelivery,\r\n            totalPagar,\r\n        })\r\n\r\n    }\r\n\r\n    const agregarProducto = async () => {\r\n        console.log(\"AGREGAR PRODUCTO\");\r\n        let tamanoLista = lista.length;\r\n        setLista([\r\n            ...lista, {          \r\n                numeroLista: tamanoLista+1,\r\n                codigoLista: \"\",\r\n                descripcionLista: [],\r\n                presentacionLista: \"\",\r\n                cantidadLista: \"1\",\r\n                precioUnitarioLista: \"0\",\r\n                descuentoLista: \"0\",\r\n                precioVentaLista: 0,\r\n                igvLista: 0,\r\n                totalLista: 0,\r\n                modoValidar: true,\r\n            }\r\n        ]);\r\n        console.log(\"Estoy asignando la siguiente numeracion:\" , tamanoLista+1);\r\n        setDetenerCreacion(true);\r\n        setDeshabilitarValidacion(true);       \r\n    }\r\n\r\n    const presentaciones = (presentacion, numero) =>{\r\n        const getPresentaciones = async () =>{\r\n            try {\r\n                console.log(\"activaremos el axios\");\r\n                let res = await axios.get(`http://46.183.113.134:3000/api/productos?busquedaPorNombre=${presentacion}`);\r\n                console.log(\"Resultado de axios para presentaciones: \",res.data);\r\n                let arrayData= res.data.map(item => (item.presentacion))\r\n                let arrayProv = [...listaPresentacion,[]]\r\n                arrayProv[numero-1]= arrayData\r\n                setListaPresentacion(arrayProv);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getPresentaciones();\r\n    };\r\n    const completarCampos = (numeroItem) =>{\r\n        let elemento = lista[numeroItem-1];\r\n        const getCodigoYprecioUnitario = async () =>{\r\n            try {\r\n                console.log(elemento);\r\n                let res = await axios.get(`http://46.183.113.134:3000/api/productos?busquedaPorNombre=${elemento.descripcionLista}&busquedaPorPresentacion=${elemento.presentacionLista}`);\r\n                \r\n                let arrayProv = [...codigoLista];\r\n                arrayProv[numeroItem-1] = res.data[0].codigo;\r\n                setCodigoLista(arrayProv)\r\n\r\n                let listaProv = [...lista]\r\n                listaProv[numeroItem-1].codigoLista = res.data[0].codigo;\r\n                listaProv[numeroItem-1].precioUnitarioLista = res.data[0].precioUnitario;\r\n                setLista(listaProv);\r\n\r\n                let arrayProvb = [...precioUnitarioLista];\r\n                arrayProvb[numeroItem-1] = res.data[0].precioUnitario;\r\n                setPrecioUnitarioLista(arrayProvb)\r\n\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n        getCodigoYprecioUnitario();\r\n        setDeshabilitarValidacion(false);\r\n    }\r\n    useEffect(() => {\r\n\r\n        let sumaTotal = 0.00;\r\n        totalLista.forEach(value =>{\r\n            sumaTotal = sumaTotal + (value*1.0);\r\n        })\r\n        setTotalPagar(sumaTotal.toFixed(2));\r\n\r\n    }, [totalLista,setTotalPagar])\r\n\r\n    \r\n\r\n    const calculoFinal = (numeroItem) => {\r\n    \r\n        // let precioVenta=((precioUnitarioLista[numeroItem-1]*listaCantidad[numeroItem-1])-descuentoLista[numeroItem-1]);\r\n        console.log(numeroItem);\r\n        let listaProv = [...lista];\r\n        console.log(listaProv);\r\n        console.log(\"precioUnitario: \", listaProv[numeroItem-1].precioUnitarioLista);\r\n        console.log(\"cantidadLista: \", listaProv[numeroItem-1].cantidadLista);\r\n        console.log(\"descuentoLista: \", listaProv[numeroItem-1].descuentoLista);\r\n\r\n        let precioVenta = (listaProv[numeroItem-1].precioUnitarioLista*listaProv[numeroItem-1].cantidadLista)-listaProv[numeroItem-1].descuentoLista;\r\n        \r\n        console.log(\"Esta lista se imprime en calculo final\",listaProv);\r\n        listaProv[numeroItem-1].precioVentaLista = precioVenta.toFixed(2);\r\n        listaProv[numeroItem-1].igvLista = (precioVenta*0.18).toFixed(2);\r\n        listaProv[numeroItem-1].totalLista = (precioVenta*1.18).toFixed(2);\r\n            \r\n        let listaProvPrecioVentaLista = [...precioVentaLista]\r\n        listaProvPrecioVentaLista[numeroItem-1]= precioVenta.toFixed(2);\r\n        setPrecioVentaLista(listaProvPrecioVentaLista);\r\n    \r\n        let listaProvIgvLista = [...igvLista]\r\n        listaProvIgvLista[numeroItem-1]= (precioVenta*0.18).toFixed(2);\r\n        setIgvLista(listaProvIgvLista);\r\n    \r\n        let listaProvTotalLista = [...totalLista]\r\n        listaProvTotalLista[numeroItem-1]= (precioVenta*1.18).toFixed(2);\r\n        setTotalLista(listaProvTotalLista);\r\n\r\n        let modoValidarProv = [...lista]\r\n        modoValidarProv[numeroItem-1].modoValidar= false;\r\n        console.log(\"Esta lista se imprime al final de calculo final\", lista);\r\n        setLista(modoValidarProv);\r\n        setDetenerCreacion(false)\r\n    }\r\n\r\n    const eliminarFila = (numeroItem) => {\r\n        let sumaTotal = 0.00;\r\n        console.log(numeroItem);\r\n        console.log(\"Se activó el boton eleiminar\");\r\n        console.log(\"Lista original:\" ,lista);\r\n        let listaProv = [...lista]        \r\n        let numerador = 0;\r\n        let i = numeroItem-1;\r\n        console.log(i);\r\n        let nuevaLista = listaProv.filter((value, index )=>{return index!==i});\r\n        console.log(\"Cadena reducida\",nuevaLista);\r\n\r\n        let listaRenumerada = nuevaLista.map( function(obj){\r\n            numerador++;\r\n            sumaTotal = sumaTotal + (obj.totalLista*1.0);\r\n            let robj = {};\r\n            robj[\"numeroLista\"]= numerador;\r\n            robj[\"codigoLista\"]= obj.codigoLista;\r\n            robj[\"descripcionLista\"]= obj.descripcionLista;\r\n            robj[\"presentacionLista\"]= obj.presentacionLista;\r\n            robj[\"cantidadLista\"]= obj.cantidadLista;\r\n            robj[\"precioUnitarioLista\"]= obj.precioUnitarioLista;\r\n            robj[\"descuentoLista\"]= obj.descuentoLista;\r\n            robj[\"precioVentaLista\"]= obj.precioVentaLista;\r\n            robj[\"igvLista\"]= obj.igvLista;\r\n            robj[\"totalLista\"]= obj.totalLista;\r\n            robj[\"modoValidar\"]= obj.modoValidar;\r\n            return robj\r\n            // sumaTotal = sumaTotal + (item.totalLista*1.0);\r\n        })\r\n        console.log(\"Lista Final\", listaRenumerada);\r\n        setLista(listaRenumerada);\r\n        console.log(\"Suma Total\", sumaTotal);\r\n        setTotalPagar(sumaTotal.toFixed(2));\r\n    }\r\n\r\n    const manejadorEntrada = (event) =>{\r\n        let numeroItem = event.target.id;\r\n        let name=event.target.name;\r\n        switch (name) {\r\n            case 'descripcion':\r\n                let listaProvDescripcion = [...lista]\r\n                listaProvDescripcion[numeroItem-1].descripcionLista = event.target.value;\r\n                setLista(listaProvDescripcion)\r\n                presentaciones(event.target.value, numeroItem)\r\n                break;\r\n            case 'presentacion':\r\n                let listaProvPresentacion = [...lista]\r\n                listaProvPresentacion[numeroItem-1].presentacionLista = event.target.value;\r\n                setLista(listaProvPresentacion)\r\n                setPresentacion([...presentacion, event.target.value])\r\n                completarCampos(numeroItem)\r\n                break;\r\n            case 'cantidad':\r\n                let listaProvCantidad = [...lista];\r\n                listaProvCantidad[numeroItem-1].cantidadLista = event.target.value;\r\n                setLista(listaProvCantidad);\r\n                let listaProv = [...listaCantidad]\r\n                listaProv[numeroItem-1]=event.target.value;\r\n                setListaCantidad(listaProv);\r\n                break;\r\n            case 'descuento':\r\n                let listaProvDescuento = [...lista];\r\n                listaProvDescuento[numeroItem-1].descuentoLista = event.target.value;\r\n                setLista(listaProvDescuento);\r\n                let listaProvb = [...descuentoLista]\r\n                listaProvb[numeroItem-1]=event.target.value;\r\n                setDescuentoLista(listaProvb);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        // calculoFinal(numeroItem)\r\n        // setValorDescripcion(event.target.value)        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n                <h1 className=\"h5\">Vendedora / Nueva venta</h1>\r\n                {/* <div>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm me-1\">Copiar</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm me-1\" >Imprimir</button>\r\n                    <button type=\"button\" className=\"btn btn-secondary btn-sm\">Excel</button>\r\n                </div> */}\r\n            </div>\r\n            \r\n            {/* http://46.183.113.134:3000/api/ventas */}\r\n\r\n            <form onSubmit={ enviarDatos }>\r\n            {/* <div> */}\r\n                <div className=\"wrapper-client-info\">\r\n                    <div className=\"owner-info\">\r\n                        <div className=\"text-uppercase\">Jaramillo Torero de Paez Manuela Maria</div>\r\n                        <div>Av. Tacna Nro. 488</div>\r\n                    </div>\r\n                    <div className=\"ruc-info\">\r\n                        <div>RUC 10095588986</div>\r\n                        <div className=\"text-uppercase\">Nota de venta electrónica</div>\r\n                        <div>\r\n                            <span>NV10</span>-<span>9281</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">DESCRIPCIÓN</th>\r\n                                <th scope=\"col\">PRESENTACIÓN</th>\r\n                                <th scope=\"col\">COD</th>\r\n                                <th scope=\"col\">CANT</th>\r\n                                <th scope=\"col\">PU</th>\r\n                                <th scope=\"col\">DSCTO</th>\r\n                                <th scope=\"col\">PV</th>\r\n                                <th scope=\"col\">IGV</th>\r\n                                <th scope=\"col\">TOT</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                lista.map(valor=> (\r\n                                    <tr>\r\n                                        <th>{valor.numeroLista}</th>\r\n                                        <td>\r\n                                            <input id={valor.numeroLista} name = \"descripcion\" type=\"search\" onChange={manejadorEntrada} \r\n                                            placeholder=\"Ingrese un producto\" list=\"listaproductos\" disabled={!valor.modoValidar} value={valor.descripcionLista} />\r\n                                            <datalist id=\"listaproductos\">\r\n                                                    {\r\n                                                        listaProductos.map((item) =>\r\n                                                            (<option value={item} />)\r\n                                                        )\r\n                                                    }\r\n                                            </datalist>\r\n                                        </td>\r\n                                        <td>\r\n                                            <select id={valor.numeroLista} name =\"presentacion\" onChange={manejadorEntrada} value={valor.presentacionLista} disabled={!valor.modoValidar}>\r\n                                                    <option value=\"\">-</option>\r\n                                                    {   \r\n                                                        listaPresentacion[valor.numeroLista-1].map(\r\n                                                            (item) =>(<option value={item}>{item}</option>)\r\n                                                        )\r\n                                                    }\r\n                                            </select>\r\n                                        </td>\r\n                                        <td>{valor.codigoLista}</td>\r\n                                        <td>\r\n                                            <input id={valor.numeroLista} min=\"1\" step=\"1\" type=\"number\" name=\"cantidad\" value={valor.cantidadLista}\r\n                                             onChange={manejadorEntrada}  list=\"off\" autoComplete=\"off\" disabled={!valor.modoValidar}/>\r\n                                        </td>\r\n                                        <td>\r\n                                            {valor.precioUnitarioLista}\r\n                                        </td>\r\n                                        <td>\r\n                                            <input id={valor.numeroLista} type=\"number\" name=\"descuento\" min=\"0\" value={valor.descuentoLista} \r\n                                            onChange={manejadorEntrada} disabled={!valor.modoValidar} />\r\n                                        </td>\r\n                                        <td>{valor.precioVentaLista}</td>\r\n                                        <td>{valor.igvLista}</td>\r\n                                        <td>{valor.totalLista}</td>\r\n                                        <td>\r\n                                            {\r\n                                                valor.modoValidar?\r\n                                                <button onClick= {()=>calculoFinal(valor.numeroLista)} className=\"btn btn-success btn-sm\" disabled={deshabilitarValidacion} >Validar</button>:\r\n                                                <button onClick= {()=>eliminarFila(valor.numeroLista)} className=\"btn btn-danger btn-sm\" >Eliminar</button>\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                ))\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <button type=\"button\" className=\"btn btn-outline-danger\" onClick={agregarProducto} disabled={detenerCreacion} >AGREGAR PRODUCTO</button>\r\n                        <p class=\"fs-5 me-5\" >{ `TOTAL: S/. ${totalPagar}`}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <div className=\"border-bottom\">Datos de regalos</div>\r\n                    <div className=\"mb-3\">\r\n                        {/* <label for=\"exampleInputEmail1\" className=\"form-label\">Email address</label> */}\r\n                        <label for=\"tipoRegalo\" className=\"form-label\">Tipo de regalo</label>\r\n                        <select onChange={ e => setTipoRegalo(e.target.value) } name=\"tipoRegalo\" className=\"form-select\" aria-label=\"Default select example\">\r\n                            <option selected>Elige el tipo de regalo</option>\r\n                            <option value=\"muestra\">Regalo muestra</option>\r\n                            <option value=\"tipo regalo 2\">Regalo tipo 2</option>\r\n                            <option value=\"tipo regalo 3\">Regalo tipo 3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label for=\"cantidadRegalo\">Cantidad (del 1 al 5):</label>\r\n                        <input onChange={ e => setCantidadRegalo(e.target.value) } type=\"number\" id=\"cantidadRegalo\" name=\"cantidadRegalo\" min=\"0\" max=\"5\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <div className=\"border-bottom\">Datos del cliente</div>\r\n                    <div>\r\n                        <label className=\"form-label\">Tipo de documento</label>\r\n                        <select onChange={ e => setTipoDocumentoCliente(e.target.value) } name=\"tipoDocumentoCliente\" className=\"form-select\">\r\n                            <option selected>Elige el tipo de documento</option>\r\n                            <option value=\"DNI\">DNI</option>\r\n                            <option value=\"documento 2\">documento tipo 2</option>\r\n                            <option value=\"documento 3\">documento tipo 3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"numeroDocumentoCliente\" className=\"form-label\">Nro. Documento</label>\r\n                        <input onChange={ e => setNumeroDocumentoCliente(e.target.value) } type=\"text\" className=\"form-control is-valid\" name=\"numeroDocumentoCliente\" id=\"numeroDocumentoCliente\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"nombreCliente\" className=\"form-label\">Nombre del cliente</label>\r\n                        <input onChange={ e => setNombreCliente(e.target.value) } type=\"text\" className=\"form-control\" name=\"nombreCliente\" id=\"nombreCliente\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"emailCliente\" className=\"form-label\">Email</label>\r\n                        <input onChange={ e => setEmailCliente(e.target.value) } type=\"email\" className=\"form-control\" name=\"emailCliente\" id=\"emailCliente\" aria-describedby=\"emailHelp\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\" for=\"celular\">Celular</label>\r\n                        <input onChange={ e => setCelular(e.target.value) } className=\"form-control\" type=\"tel\" name=\"celular\" id=\"celular\" pattern=\"[0-9]{9}\"></input>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\">Provincia</label>\r\n                        <select onChange={ e => setProvincia(e.target.value) } name=\"provincia\" className=\"form-select\">\r\n                            <option selected>Elige la provincia</option>\r\n                            <option value=\"Lima\">Lima</option>\r\n                            <option value=\"provincia tipo 2\">provincia tipo 2</option>\r\n                            <option value=\"provincia tipo 3\">provincia tipo 3</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"form-check\">\r\n                            <input onChange={ e => deliveryChecked(e) } className=\"form-check-input\" type=\"radio\" value=\"true\" name=\"delivery\" id=\"delivery1\"></input>\r\n                            <label className=\"form-check-label\" for=\"delivery1\">\r\n                                Sí\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input onChange={ e => deliveryChecked(e) } className=\"form-check-input\" type=\"radio\" value=\"false\" name=\"delivery\" id=\"delivery2\"></input>\r\n                            <label className=\"form-check-label\" for=\"delivery2\">\r\n                                No\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"direccion\" className=\"form-label\">Dirección</label>\r\n                        <input onChange={ e => setDireccion(e.target.value) } type=\"text\" className=\"form-control\" name=\"direccion\" id=\"direccion\"></input>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"referencias\" className=\"form-label\">Referencias</label>\r\n                        <input onChange={ e => setReferencias(e.target.value) } type=\"text\" className=\"form-control\" name=\"referencias\" id=\"referencias\"></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <div className=\"border-bottom\">Datos del cliente</div>\r\n                    <div>\r\n                        <p className=\"m-0 me-1\">Fecha</p>\r\n                        <DatePicker \r\n                            selected={dateInicio} \r\n                            onChange={date => setDateInicio(date)} \r\n                            locale=\"es\"\r\n                            customInput={<ExampleCustomInput />} \r\n                            dateFormat=\"dd/MM/yyyy\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Moneda</label>\r\n                        <select onChange={ e => setTipoMoneda(e.target.value) } name=\"tipoMoneda\" className=\"form-select\">\r\n                            <option selected>Elige el tipo de moneda</option>\r\n                            <option value=\"soles\">Soles</option>\r\n                            <option value=\"dolares\">Dolares</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label for=\"igv\" className=\"form-label\">IGV</label>\r\n                        <input onChange={ e => setIgv(e.target.value) } type=\"text\" className=\"form-control\" name=\"igv\" id=\"igv\" value=\"0.18\" disabled readonly></input>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Condicion de pago</label>\r\n                        <select onChange={ e => setCondicionPago(e.target.value) } name=\"condicionPago\" className=\"form-select\">\r\n                            <option selected>Elige la condicion de pago</option>\r\n                            <option value=\"tarjeta\">Tarjeta</option>\r\n                            <option value=\"efectivo\">Efectivo</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"form-label\">Canal de venta</label>\r\n                        <select onChange={ e => setCanalVenta(e.target.value) } name=\"canalVenta\" className=\"form-select\">\r\n                            <option selected>Elige la canal de venta</option>\r\n                            <option value=\"whatsapp\">whatsapp</option>\r\n                            <option value=\"llamada\">llamada</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Enviar\"></input>\r\n            {/* </div> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NuevaVenta\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":13},{"ruleId":"91","severity":1,"message":"95","line":20,"column":12,"nodeType":"93","messageId":"94","endLine":20,"endColumn":16},{"ruleId":"91","severity":1,"message":"96","line":296,"column":17,"nodeType":"93","messageId":"94","endLine":296,"endColumn":24},{"ruleId":"91","severity":1,"message":"97","line":3,"column":21,"nodeType":"93","messageId":"94","endLine":3,"endColumn":35},{"ruleId":"91","severity":1,"message":"98","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":13},{"ruleId":"91","severity":1,"message":"99","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":16},{"ruleId":"91","severity":1,"message":"100","line":16,"column":12,"nodeType":"93","messageId":"94","endLine":16,"endColumn":23},{"ruleId":"91","severity":1,"message":"101","line":16,"column":25,"nodeType":"93","messageId":"94","endLine":16,"endColumn":39},{"ruleId":"91","severity":1,"message":"102","line":20,"column":12,"nodeType":"93","messageId":"94","endLine":20,"endColumn":26},{"ruleId":"91","severity":1,"message":"103","line":20,"column":28,"nodeType":"93","messageId":"94","endLine":20,"endColumn":45},{"ruleId":"91","severity":1,"message":"104","line":23,"column":12,"nodeType":"93","messageId":"94","endLine":23,"endColumn":19},{"ruleId":"91","severity":1,"message":"105","line":23,"column":21,"nodeType":"93","messageId":"94","endLine":23,"endColumn":31},{"ruleId":"91","severity":1,"message":"106","line":24,"column":12,"nodeType":"93","messageId":"94","endLine":24,"endColumn":17},{"ruleId":"91","severity":1,"message":"107","line":24,"column":19,"nodeType":"93","messageId":"94","endLine":24,"endColumn":27},{"ruleId":"91","severity":1,"message":"108","line":25,"column":12,"nodeType":"93","messageId":"94","endLine":25,"endColumn":18},{"ruleId":"91","severity":1,"message":"109","line":25,"column":20,"nodeType":"93","messageId":"94","endLine":25,"endColumn":29},{"ruleId":"91","severity":1,"message":"110","line":26,"column":12,"nodeType":"93","messageId":"94","endLine":26,"endColumn":22},{"ruleId":"91","severity":1,"message":"111","line":28,"column":12,"nodeType":"93","messageId":"94","endLine":28,"endColumn":32},{"ruleId":"91","severity":1,"message":"112","line":33,"column":12,"nodeType":"93","messageId":"94","endLine":33,"endColumn":15},{"ruleId":"91","severity":1,"message":"113","line":34,"column":12,"nodeType":"93","messageId":"94","endLine":34,"endColumn":19},{"ruleId":"91","severity":1,"message":"114","line":35,"column":12,"nodeType":"93","messageId":"94","endLine":35,"endColumn":24},{"ruleId":"91","severity":1,"message":"115","line":36,"column":12,"nodeType":"93","messageId":"94","endLine":36,"endColumn":25},{"ruleId":"91","severity":1,"message":"116","line":37,"column":12,"nodeType":"93","messageId":"94","endLine":37,"endColumn":27},{"ruleId":"91","severity":1,"message":"117","line":38,"column":12,"nodeType":"93","messageId":"94","endLine":38,"endColumn":21},{"ruleId":"91","severity":1,"message":"118","line":39,"column":12,"nodeType":"93","messageId":"94","endLine":39,"endColumn":22},{"ruleId":"91","severity":1,"message":"119","line":40,"column":12,"nodeType":"93","messageId":"94","endLine":40,"endColumn":20},{"ruleId":"91","severity":1,"message":"120","line":41,"column":12,"nodeType":"93","messageId":"94","endLine":41,"endColumn":21},{"ruleId":"91","severity":1,"message":"121","line":42,"column":12,"nodeType":"93","messageId":"94","endLine":42,"endColumn":23},{"ruleId":"91","severity":1,"message":"122","line":43,"column":12,"nodeType":"93","messageId":"94","endLine":43,"endColumn":19},{"ruleId":"91","severity":1,"message":"123","line":43,"column":21,"nodeType":"93","messageId":"94","endLine":43,"endColumn":31},{"ruleId":"91","severity":1,"message":"124","line":44,"column":28,"nodeType":"93","messageId":"94","endLine":44,"endColumn":45},{"ruleId":"91","severity":1,"message":"125","line":45,"column":22,"nodeType":"93","messageId":"94","endLine":45,"endColumn":33},{"ruleId":"91","severity":1,"message":"126","line":46,"column":12,"nodeType":"93","messageId":"94","endLine":46,"endColumn":25},{"ruleId":"91","severity":1,"message":"127","line":46,"column":27,"nodeType":"93","messageId":"94","endLine":46,"endColumn":43},{"ruleId":"91","severity":1,"message":"128","line":48,"column":12,"nodeType":"93","messageId":"94","endLine":48,"endColumn":24},{"ruleId":"91","severity":1,"message":"129","line":48,"column":26,"nodeType":"93","messageId":"94","endLine":48,"endColumn":41},{"ruleId":"91","severity":1,"message":"130","line":49,"column":12,"nodeType":"93","messageId":"94","endLine":49,"endColumn":24},{"ruleId":"91","severity":1,"message":"131","line":49,"column":26,"nodeType":"93","messageId":"94","endLine":49,"endColumn":41},{"ruleId":"91","severity":1,"message":"132","line":61,"column":12,"nodeType":"93","messageId":"94","endLine":61,"endColumn":23},{"ruleId":"91","severity":1,"message":"133","line":61,"column":25,"nodeType":"93","messageId":"94","endLine":61,"endColumn":39},{"ruleId":"91","severity":1,"message":"134","line":62,"column":12,"nodeType":"93","messageId":"94","endLine":62,"endColumn":22},{"ruleId":"91","severity":1,"message":"135","line":62,"column":24,"nodeType":"93","messageId":"94","endLine":62,"endColumn":37},{"ruleId":"91","severity":1,"message":"136","line":64,"column":12,"nodeType":"93","messageId":"94","endLine":64,"endColumn":34},{"ruleId":"91","severity":1,"message":"137","line":65,"column":12,"nodeType":"93","messageId":"94","endLine":65,"endColumn":29},{"ruleId":"91","severity":1,"message":"138","line":65,"column":31,"nodeType":"93","messageId":"94","endLine":65,"endColumn":51},{"ruleId":"139","severity":1,"message":"140","line":918,"column":53,"nodeType":"141","endLine":918,"endColumn":124},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'newData' is assigned a value but never used.","'registerLocale' is defined but never used.","'set' is defined but never used.","'Button' is defined but never used.","'descripcion' is assigned a value but never used.","'setDescripcion' is assigned a value but never used.","'precioUnitario' is assigned a value but never used.","'setPrecioUnitario' is assigned a value but never used.","'usuario' is assigned a value but never used.","'setUsuario' is assigned a value but never used.","'serie' is assigned a value but never used.","'setSerie' is assigned a value but never used.","'numero' is assigned a value but never used.","'setNumero' is assigned a value but never used.","'tipoRegalo' is assigned a value but never used.","'tipoDocumentoCliente' is assigned a value but never used.","'igv' is assigned a value but never used.","'celular' is assigned a value but never used.","'emailCliente' is assigned a value but never used.","'condicionPago' is assigned a value but never used.","'numeroOperacion' is assigned a value but never used.","'provincia' is assigned a value but never used.","'canalVenta' is assigned a value but never used.","'delivery' is assigned a value but never used.","'direccion' is assigned a value but never used.","'referencias' is assigned a value but never used.","'gravada' is assigned a value but never used.","'setGravada' is assigned a value but never used.","'setDescuentoTotal' is assigned a value but never used.","'setTotalIgv' is assigned a value but never used.","'totalDelivery' is assigned a value but never used.","'setTotalDelivery' is assigned a value but never used.","'filaProducto' is assigned a value but never used.","'setFilaProducto' is assigned a value but never used.","'botonAgregar' is assigned a value but never used.","'setBotonAgregar' is assigned a value but never used.","'modoValidar' is assigned a value but never used.","'setModoValidar' is assigned a value but never used.","'numeracion' is assigned a value but never used.","'setNumeracion' is assigned a value but never used.","'deshabilitarValidacion' is assigned a value but never used.","'fijarPresentacion' is assigned a value but never used.","'setFijarPresentacion' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation"]